package com.rtb.parallelplayer.model;


import lombok.AllArgsConstructor;
import lombok.Getter;
import lombok.NoArgsConstructor;
import lombok.Setter;

import javax.persistence.*;
import java.util.List;

@Getter
@Setter
@AllArgsConstructor
@NoArgsConstructor
@Entity
public class Layer {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Long id;

    @Column(name = "name")
    private String name;

    @ManyToOne
    @JoinColumn(name = "room_id")
    private Room room;

    @Column(name = "order_in_list")
    private Integer orderInList;

    @Column(name = "cycled")
    private Boolean cycled;

    @Column(name = "random")
    private Boolean random;

    @Column(name = "now_playing_id")
    private Long nowPlayingOrderInList;

    //Generated from order in layer from track_in_layer table
    @Transient
    private Track nowPlaying;


    //Sorted list generated by service
    @Transient
    private List<Track> tracks;


    public Layer(Room room, String name, Integer orderInList, Boolean cycled, Boolean random, Track nowPlaying) {
        this.room = room;
        this.name = name;
        this.orderInList = orderInList;
        this.cycled = cycled;
        this.random = random;
        this.nowPlaying = nowPlaying;
    }

    @Override
    public String toString() {
        return "Layer{" +
                "id=" + id +
                ", name='" + name + '\'' +
                ", room=" + room +
                ", orderInList=" + orderInList +
                ", cycled=" + cycled +
                ", random=" + random +
                ", nowPlaying=" + nowPlaying +
                ", tracks=" + tracks +
                '}';
    }
}
